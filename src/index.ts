

import { YarnVM, OptionItem } from "./yarnvm";
import { Program } from "./yarn_spinner";

window.addEventListener('load', async function () {
    console.log("window loaded!");

    this.document.getElementById("testbutton")?.addEventListener("click", () => {
        let container = this.document.getElementById("container")
        if (container != null)
        {
            container.innerHTML = "";
        }
        // GENERATED DATA FROM munger.py!
        const stringTable: { [key: string]: string } = { "line:/Users/McJones/Downloads/basicnode.yarn-Start-0": "line with some substitution in it {0}, how cool", "line:/Users/McJones/Downloads/basicnode.yarn-Start-1": "option A", "line:/Users/McJones/Downloads/basicnode.yarn-Start-2": "line underneath option A", "line:/Users/McJones/Downloads/basicnode.yarn-Start-3": "option B", "line:/Users/McJones/Downloads/basicnode.yarn-Second-4": "this is the only line in the second node!" };
        const data = Uint8Array.from([0x12,0x9c,0x04,0x0a,0x05,0x53,0x74,0x61,0x72,0x74,0x12,0x92,0x04,0x0a,0x05,0x53,0x74,0x61,0x72,0x74,0x12,0x0d,0x08,0x0d,0x12,0x09,0x0a,0x07,0x24,0x73,0x74,0x72,0x69,0x6e,0x67,0x12,0x09,0x08,0x07,0x12,0x05,0x1d,0x00,0x00,0x80,0x3f,0x12,0x0c,0x08,0x0c,0x12,0x08,0x0a,0x06,0x6e,0x75,0x6d,0x62,0x65,0x72,0x12,0x41,0x08,0x02,0x12,0x36,0x0a,0x34,0x6c,0x69,0x6e,0x65,0x3a,0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,0x4d,0x63,0x4a,0x6f,0x6e,0x65,0x73,0x2f,0x44,0x6f,0x77,0x6e,0x6c,0x6f,0x61,0x64,0x73,0x2f,0x62,0x61,0x73,0x69,0x63,0x6e,0x6f,0x64,0x65,0x2e,0x79,0x61,0x72,0x6e,0x2d,0x53,0x74,0x61,0x72,0x74,0x2d,0x30,0x12,0x05,0x1d,0x00,0x00,0x80,0x3f,0x12,0x61,0x08,0x04,0x12,0x36,0x0a,0x34,0x6c,0x69,0x6e,0x65,0x3a,0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,0x4d,0x63,0x4a,0x6f,0x6e,0x65,0x73,0x2f,0x44,0x6f,0x77,0x6e,0x6c,0x6f,0x61,0x64,0x73,0x2f,0x62,0x61,0x73,0x69,0x63,0x6e,0x6f,0x64,0x65,0x2e,0x79,0x61,0x72,0x6e,0x2d,0x53,0x74,0x61,0x72,0x74,0x2d,0x31,0x12,0x1a,0x0a,0x18,0x4c,0x32,0x73,0x68,0x6f,0x72,0x74,0x63,0x75,0x74,0x6f,0x70,0x74,0x69,0x6f,0x6e,0x5f,0x53,0x74,0x61,0x72,0x74,0x5f,0x31,0x12,0x05,0x1d,0x00,0x00,0x00,0x00,0x12,0x02,0x10,0x00,0x12,0x61,0x08,0x04,0x12,0x36,0x0a,0x34,0x6c,0x69,0x6e,0x65,0x3a,0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,0x4d,0x63,0x4a,0x6f,0x6e,0x65,0x73,0x2f,0x44,0x6f,0x77,0x6e,0x6c,0x6f,0x61,0x64,0x73,0x2f,0x62,0x61,0x73,0x69,0x63,0x6e,0x6f,0x64,0x65,0x2e,0x79,0x61,0x72,0x6e,0x2d,0x53,0x74,0x61,0x72,0x74,0x2d,0x33,0x12,0x1a,0x0a,0x18,0x4c,0x33,0x73,0x68,0x6f,0x72,0x74,0x63,0x75,0x74,0x6f,0x70,0x74,0x69,0x6f,0x6e,0x5f,0x53,0x74,0x61,0x72,0x74,0x5f,0x32,0x12,0x05,0x1d,0x00,0x00,0x00,0x00,0x12,0x02,0x10,0x00,0x12,0x02,0x08,0x05,0x12,0x02,0x08,0x01,0x12,0x41,0x08,0x02,0x12,0x36,0x0a,0x34,0x6c,0x69,0x6e,0x65,0x3a,0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,0x4d,0x63,0x4a,0x6f,0x6e,0x65,0x73,0x2f,0x44,0x6f,0x77,0x6e,0x6c,0x6f,0x61,0x64,0x73,0x2f,0x62,0x61,0x73,0x69,0x63,0x6e,0x6f,0x64,0x65,0x2e,0x79,0x61,0x72,0x6e,0x2d,0x53,0x74,0x61,0x72,0x74,0x2d,0x32,0x12,0x05,0x1d,0x00,0x00,0x00,0x00,0x12,0x0f,0x12,0x0d,0x0a,0x0b,0x4c,0x31,0x67,0x72,0x6f,0x75,0x70,0x5f,0x65,0x6e,0x64,0x12,0x0f,0x12,0x0d,0x0a,0x0b,0x4c,0x31,0x67,0x72,0x6f,0x75,0x70,0x5f,0x65,0x6e,0x64,0x12,0x02,0x08,0x0b,0x12,0x0c,0x08,0x06,0x12,0x08,0x0a,0x06,0x53,0x65,0x63,0x6f,0x6e,0x64,0x12,0x02,0x08,0x10,0x12,0x02,0x08,0x0f,0x1a,0x04,0x0a,0x02,0x4c,0x30,0x1a,0x1c,0x0a,0x18,0x4c,0x32,0x73,0x68,0x6f,0x72,0x74,0x63,0x75,0x74,0x6f,0x70,0x74,0x69,0x6f,0x6e,0x5f,0x53,0x74,0x61,0x72,0x74,0x5f,0x31,0x10,0x08,0x1a,0x1c,0x0a,0x18,0x4c,0x33,0x73,0x68,0x6f,0x72,0x74,0x63,0x75,0x74,0x6f,0x70,0x74,0x69,0x6f,0x6e,0x5f,0x53,0x74,0x61,0x72,0x74,0x5f,0x32,0x10,0x0a,0x1a,0x0f,0x0a,0x0b,0x4c,0x31,0x67,0x72,0x6f,0x75,0x70,0x5f,0x65,0x6e,0x64,0x10,0x0b,0x12,0x60,0x0a,0x06,0x53,0x65,0x63,0x6f,0x6e,0x64,0x12,0x56,0x0a,0x06,0x53,0x65,0x63,0x6f,0x6e,0x64,0x12,0x42,0x08,0x02,0x12,0x37,0x0a,0x35,0x6c,0x69,0x6e,0x65,0x3a,0x2f,0x55,0x73,0x65,0x72,0x73,0x2f,0x4d,0x63,0x4a,0x6f,0x6e,0x65,0x73,0x2f,0x44,0x6f,0x77,0x6e,0x6c,0x6f,0x61,0x64,0x73,0x2f,0x62,0x61,0x73,0x69,0x63,0x6e,0x6f,0x64,0x65,0x2e,0x79,0x61,0x72,0x6e,0x2d,0x53,0x65,0x63,0x6f,0x6e,0x64,0x2d,0x34,0x12,0x05,0x1d,0x00,0x00,0x00,0x00,0x12,0x02,0x08,0x0f,0x1a,0x04,0x0a,0x02,0x4c,0x34,0x1a,0x0e,0x0a,0x07,0x24,0x73,0x74,0x72,0x69,0x6e,0x67,0x12,0x03,0x0a,0x01,0x35]);
        load(stringTable, data);
    });
});

export function load(stringTable: {[key: string]: string}, data: Uint8Array)
{
    let program = Program.fromBinary(data);

    if (program == undefined)
    {
        console.log("well poop");
    }
    else
    {
        var VM = new YarnVM(program, stringTable);
        if (VM.setNode("Start"))
        {
            VM.lineCallback = function (line: string)
            {
                return new Promise<void>(function (resolve)
                {
                    var lineElement = document.createElement("div");
                    lineElement.innerHTML = `<p>${line}</p>`;
                    document.getElementById("container")?.appendChild(lineElement);
                    resolve();
                });
            }
            VM.commandCallback = function (command: string)
            {
                return new Promise(function (resolve) {
                    var commandElement = document.createElement("div");
                    commandElement.innerHTML = `<p><i>${command}</i></p>`;
                    document.getElementById("container")?.appendChild(commandElement);
                    resolve();
                });
            }
            VM.optionCallback = function (options: OptionItem[])
            {
                return new Promise<number>(function (resolve)
                {
                    var optionContainer = document.createElement("div");
                    options.forEach((option, index) =>
                    {
                        var p = document.createElement("p");
                        p.innerHTML = `<b>-></b> ${option.line}`;
                        optionContainer.appendChild(p);

                        var button = document.createElement("button");
                        button.innerHTML = "Select";
                        button.classList.add("optionButton");
                        
                        optionContainer.appendChild(button);

                        button.addEventListener("click", () =>
                        {
                            let buttons = document.querySelectorAll('.optionButton');
                            buttons.forEach(b =>
                            {
                                b.remove();
                            });
                            resolve(index);
                        });
                    });
                    document.getElementById("container")?.appendChild(optionContainer);
                });
            }

            VM.start();
        }
        else
        {
            console.error("shit");
        }
    }
}
